name: deploy to production

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ build-job ]

jobs:
  Build_Backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - id: short-commit-sha
        run: echo "::set-output name=version::$(echo ${GITHUB_SHA} | cut -c1-8)"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: ${{ secrets.aws_region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push auth image
        uses: docker/build-push-action@v2
        with:
          context: ./auth
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/auth:${{ steps.short-commit-sha.outputs.version }}, ${{ steps.login-ecr.outputs.registry }}/auth:latest
          cache-from: type=registry,ref=${{ steps.login-ecr.outputs.registry }}/auth:latest
          cache-to: type=inline
          build-args: |
            AWS_ACCESS_KEY_ID=${{ secrets.assets_access_key_id }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.assets_secret_access_key }}
            AWS_DEFAULT_REGION=${{ secrets.aws_region }}
      
      - name: Build and Push booking image
        uses: docker/build-push-action@v2
        with:
          context: ./booking
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/booking:${{ steps.short-commit-sha.outputs.version }}, ${{ steps.login-ecr.outputs.registry }}/booking:latest
          cache-from: type=registry,ref=${{ steps.login-ecr.outputs.registry }}/booking:latest
          cache-to: type=inline
          build-args: |
            AWS_ACCESS_KEY_ID=${{ secrets.assets_access_key_id }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.assets_secret_access_key }}
            AWS_DEFAULT_REGION=${{ secrets.aws_region }}
      
      - name: Build and Push graphql image
        uses: docker/build-push-action@v2
        with:
          context: ./graphql
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/graphql:${{ steps.short-commit-sha.outputs.version }}, ${{ steps.login-ecr.outputs.registry }}/graphql:latest
          cache-from: type=registry,ref=${{ steps.login-ecr.outputs.registry }}/graphql:latest
          cache-to: type=inline
          build-args: |
            AWS_ACCESS_KEY_ID=${{ secrets.assets_access_key_id }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.assets_secret_access_key }}
            AWS_DEFAULT_REGION=${{ secrets.aws_region }}
      
      - name: Build and Push client image
        uses: docker/build-push-action@v2
        with:
          context: ./client
          target: builder
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/client:${{ steps.short-commit-sha.outputs.version }}, ${{ steps.login-ecr.outputs.registry }}/client:latest
          cache-from: type=registry,ref=${{ steps.login-ecr.outputs.registry }}/client:latest
          cache-to: type=inline
          build-args: |
            AWS_ACCESS_KEY_ID=${{ secrets.assets_access_key_id }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.assets_secret_access_key }}
            AWS_DEFAULT_REGION=${{ secrets.aws_region }}